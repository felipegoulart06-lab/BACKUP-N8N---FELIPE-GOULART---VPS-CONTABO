{
  "active": false,
  "connections": {
    "Entrada de Dados (Webhook)": {
      "main": [
        [
          {
            "node": "Processar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-28T15:52:00.314Z",
  "id": "CW1zrL02hkvXrWrl",
  "isArchived": false,
  "meta": null,
  "name": "Formul√°rio Extrair Contatos",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "extrair-contatos",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "c4722f99-7807-4cf3-97a6-4b70cf1393a4",
      "name": "Entrada de Dados (Webhook)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "webhookId": "extrair-contatos"
    },
    {
      "parameters": {
        "functionCode": "// 1Ô∏è‚É£ Captura o texto e garante que √© string\nlet text = $json.body?.raw_text || $json.raw_text || $json.text || $json.body || \"\";\n\n// se vier um objeto, transforma em string\nif (typeof text !== \"string\") {\n  text = JSON.stringify(text);\n}\n\n// Exibe no log o conte√∫do recebido (para depura√ß√£o)\nconsole.log(\"üì© Conte√∫do recebido:\", text);\n\n// 2Ô∏è‚É£ Express√µes regulares\nconst instaRegex = /https:\\/\\/(?:www\\.)?instagram\\.com\\/[A-Za-z0-9._-]+/gi;\nconst waRegex = /(?:wa\\.me\\/\\+?(\\d{8,15}))|(\\+?55\\s*\\(?[1-9][0-9]\\)?[\\s\\-\\.]*[0-9]{4,5}[\\s\\-\\.]*[0-9]{4})/gi;\n\n// 3Ô∏è‚É£ Extrai todas as correspond√™ncias\nconst instagrams = text.match(instaRegex) || [];\nconst whatsapps = text.match(waRegex) || [];\n\n// 4Ô∏è‚É£ Monta pares aproximados\nconst rows = [[\"WhatsApp\", \"Instagram\"]];\nconst seen = new Set();\n\nfor (let i = 0; i < Math.max(instagrams.length, whatsapps.length); i++) {\n  const instagram = instagrams[i] || \"\";\n  let telefone = whatsapps[i] || \"\";\n\n  telefone = telefone.replace(/\\D/g, \"\");\n  if (!telefone.startsWith(\"55\") && telefone.length >= 10) telefone = \"55\" + telefone;\n\n  if (telefone && instagram && !seen.has(telefone + instagram)) {\n    seen.add(telefone + instagram);\n    rows.push([\"'\" + telefone, instagram]);\n  }\n}\n\n// 5Ô∏è‚É£ Gera CSV\nconst csvOutput = rows.map(r => r.join(\";\")).join(\"\\n\");\n\n// 6Ô∏è‚É£ Retorna bin√°rio (gera bot√£o de download no n8n)\nreturn [\n  {\n    json: { mensagem: \"CSV gerado com sucesso!\", encontrados: rows.length - 1 },\n    binary: {\n      data: {\n        data: Buffer.from(csvOutput, \"utf8\").toString(\"base64\"),\n        mimeType: \"text/csv\",\n        fileName: \"contatos.csv\",\n      },\n    },\n  },\n];\n"
      },
      "id": "d7aa3783-f03b-402b-b87b-9056050184f1",
      "name": "Processar Dados",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        304,
        0
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "updatedAt": "2025-10-28T15:52:00.314Z",
      "createdAt": "2025-10-28T15:52:00.314Z",
      "role": "workflow:owner",
      "workflowId": "CW1zrL02hkvXrWrl",
      "projectId": "Zl3u1vsJTIYoa3dk"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-28T15:52:00.314Z",
  "versionId": "388bc6db-3ce6-49c9-8fc0-3fdbe9124d20"
}